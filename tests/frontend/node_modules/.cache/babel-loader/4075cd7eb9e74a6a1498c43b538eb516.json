{"ast":null,"code":"import _toConsumableArray from \"/Users/its_behind_you/chaosstack/tests/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/its_behind_you/chaosstack/tests/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/its_behind_you/chaosstack/tests/src/App.js\";\nimport React, { useState } from 'react';\n\nvar Test = function Test(_ref) {\n  var questions = _ref.questions,\n      canSubmit = _ref.canSubmit;\n\n  var _useState = useState(questions.map(function () {\n    return -1;\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      answers = _useState2[0],\n      setAnswers = _useState2[1];\n\n  var onSubmit = function onSubmit() {\n    return alert(userName + '\\'s answers are: ' + answers.join(' '));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, questions.map(function (question, index) {\n    return React.createElement(Question, Object.assign({\n      key: index\n    }, question, {\n      chosen: answers[index],\n      setAnswer: function setAnswer(answer) {\n        return setAnswers([].concat(_toConsumableArray(answers.slice(0, index)), [answer], _toConsumableArray(answers.slice(index + 1))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }));\n  }), React.createElement(\"button\", {\n    disabled: canSubmit,\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Question = function Question(_ref2) {\n  var id = _ref2.id,\n      text = _ref2.text,\n      answers = _ref2.answers,\n      chosen = _ref2.chosen,\n      setAnswer = _ref2.setAnswer;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, text), answers.map(function (answer, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      checked: index === chosen,\n      name: text + id,\n      onChange: function onChange() {\n        return setAnswer(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), answer));\n  }));\n};\n\nvar questions = [{\n  text: \"first\",\n  id: 1,\n  answers: [\"a\", \"b\", \"c\"]\n}, {\n  text: \"second\",\n  id: 2,\n  answers: [\"d\", \"e\", \"f\"]\n}, {\n  text: \"third\",\n  id: 3,\n  answers: [\"g\", \"h\", \"i\"]\n}];\n\nvar App = function App() {\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userName = _useState4[0],\n      setUserName = _useState4[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Name: \", React.createElement(\"input\", {\n    type: \"text\",\n    value: userName,\n    onChange: function onChange(e) {\n      return setUserName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Test, {\n    canSubmit: userName === \"\",\n    questions: questions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/its_behind_you/chaosstack/tests/src/App.js"],"names":["React","useState","Test","questions","canSubmit","map","answers","setAnswers","onSubmit","alert","userName","join","question","index","answer","slice","Question","id","text","chosen","setAnswer","App","setUserName","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst Test = ({ questions, canSubmit }) => {\n  const [answers, setAnswers] = useState(questions.map(() => -1));\n  const onSubmit = () => alert(userName + '\\'s answers are: ' + answers.join(' '))\n  return (\n    <div>\n      {questions.map((question, index) => (\n        <Question\n          key={index}\n          {...question}\n          chosen={answers[index]}\n          setAnswer={(answer) => setAnswers([...answers.slice(0, index), answer, ...answers.slice(index + 1)])}\n        />\n      ))}\n      <button disabled={canSubmit} onClick={onSubmit}>Submit</button>\n    </div>\n  )\n}\n\nconst Question = ({id, text, answers, chosen, setAnswer}) => {\n  return (\n    <div>\n      <p>{text}</p>\n      {answers.map((answer, index) => (\n        <div key={index}>\n          <label>\n            <input type=\"radio\" checked={index === chosen} name={text + id} onChange={() => setAnswer(index)}/>\n            {answer}\n          </label>\n        </div>\n        )\n      )}\n    </div>\n  )\n}\n\nconst questions = [\n  {\n    text: \"first\",\n    id: 1,\n    answers: [\n      \"a\",\n      \"b\",\n      \"c\"\n    ]\n  },\n  {\n    text: \"second\",\n    id: 2,\n    answers: [\n      \"d\",\n      \"e\",\n      \"f\"\n    ]\n  },\n  {\n    text: \"third\",\n    id: 3,\n    answers: [\n      \"g\",\n      \"h\",\n      \"i\"\n    ]\n  },\n]\n\nconst App = () => {\n  const [userName, setUserName] = useState(\"\")\n  \n  return (\n    <div>\n      <label>Name: <input type=\"text\" value={userName} onChange={(e) => setUserName(e.target.value)}/></label>\n      <Test canSubmit={userName === \"\"} questions={questions}/>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}