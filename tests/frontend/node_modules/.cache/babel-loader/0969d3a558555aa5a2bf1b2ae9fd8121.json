{"ast":null,"code":"import _toConsumableArray from \"/Users/its_behind_you/chaosstack/tests/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/its_behind_you/chaosstack/tests/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/its_behind_you/chaosstack/tests/src/App.js\";\nimport React, { useState } from 'react';\n\nvar Test = function Test(_ref) {\n  var questions = _ref.questions,\n      onSubmit = _ref.onSubmit;\n\n  var _useState = useState(questions.map(function () {\n    return -1;\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      answers = _useState2[0],\n      setAnswers = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userName = _useState4[0],\n      setUserName = _useState4[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Name: \", React.createElement(\"input\", {\n    type: \"text\",\n    value: userName,\n    onChange: function onChange(e) {\n      return setUserName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })), questions.map(function (question, index) {\n    return React.createElement(Question, Object.assign({\n      key: index\n    }, question, {\n      chosen: answers[index],\n      setAnswer: function setAnswer(answer) {\n        return setAnswers([].concat(_toConsumableArray(answers.slice(0, index)), [answer], _toConsumableArray(answers.slice(index + 1))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  }), React.createElement(\"button\", {\n    disabled: userName === \"\",\n    onClick: function onClick() {\n      return onSubmit(answers, userName);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Question = function Question(_ref2) {\n  var id = _ref2.id,\n      text = _ref2.text,\n      answers = _ref2.answers,\n      chosen = _ref2.chosen,\n      setAnswer = _ref2.setAnswer;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, text), answers.map(function (answer, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      checked: index === chosen,\n      name: text + id,\n      onChange: function onChange() {\n        return setAnswer(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), answer));\n  }));\n};\n\nvar LeaderBoard = function LeaderBoard(_ref3) {\n  var users = _ref3.users;\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Score\")), users.map(function (user, index) {\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, user.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, user.score));\n  }));\n};\n\nvar questions = [{\n  text: \"first\",\n  id: 1,\n  answers: [\"a\", \"b\", \"c\"]\n}, {\n  text: \"second\",\n  id: 2,\n  answers: [\"d\", \"e\", \"f\"]\n}, {\n  text: \"third\",\n  id: 3,\n  answers: [\"g\", \"h\", \"i\"]\n}];\nvar users = [{\n  name: \"Dude\",\n  score: 420\n}, {\n  name: \"Bro\",\n  score: 69\n}, {\n  name: \"Hackerman\",\n  score: 1337\n}];\n\nvar App = function App() {\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      submitted = _useState6[0],\n      setSubmitted = _useState6[1];\n\n  var onSubmit = function onSubmit(answers, userName) {\n    alert(userName + '\\'s answers are: ' + answers.join(' '));\n    setSubmitted(true);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, submitted ? React.createElement(LeaderBoard, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }) : React.createElement(Test, {\n    questions: questions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/its_behind_you/chaosstack/tests/src/App.js"],"names":["React","useState","Test","questions","onSubmit","map","answers","setAnswers","userName","setUserName","e","target","value","question","index","answer","slice","Question","id","text","chosen","setAnswer","LeaderBoard","users","user","name","score","App","submitted","setSubmitted","alert","join"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst Test = ({ questions, onSubmit }) => {\n  const [answers, setAnswers] = useState(questions.map(() => -1));\n  const [userName, setUserName] = useState(\"\")\n\n  \n  return (\n    <div>\n      <label>Name: <input type=\"text\" value={userName} onChange={(e) => setUserName(e.target.value)}/></label>\n      {questions.map((question, index) => (\n        <Question\n          key={index}\n          {...question}\n          chosen={answers[index]}\n          setAnswer={(answer) => setAnswers([...answers.slice(0, index), answer, ...answers.slice(index + 1)])}\n        />\n      ))}\n      <button disabled={userName === \"\"} onClick={() => onSubmit(answers, userName)}>Submit</button>\n    </div>\n  )\n}\n\nconst Question = ({id, text, answers, chosen, setAnswer}) => {\n  return (\n    <div>\n      <p>{text}</p>\n      {answers.map((answer, index) => (\n        <div key={index}>\n          <label>\n            <input type=\"radio\" checked={index === chosen} name={text + id} onChange={() => setAnswer(index)}/>\n            {answer}\n          </label>\n        </div>\n        )\n      )}\n    </div>\n  )\n}\n\nconst LeaderBoard = ({users}) => (\n  <table>\n    <tr>\n      <th>\n        Username\n      </th>\n      <th>\n        Score\n      </th>\n    </tr>\n    {users.map((user, index) => (\n      <tr key={index}>\n        <td>{user.name}</td>\n        <td>{user.score}</td>\n      </tr>\n    ))}\n  </table>\n)\n\nconst questions = [\n  {\n    text: \"first\",\n    id: 1,\n    answers: [\n      \"a\",\n      \"b\",\n      \"c\"\n    ]\n  },\n  {\n    text: \"second\",\n    id: 2,\n    answers: [\n      \"d\",\n      \"e\",\n      \"f\"\n    ]\n  },\n  {\n    text: \"third\",\n    id: 3,\n    answers: [\n      \"g\",\n      \"h\",\n      \"i\"\n    ]\n  },\n]\n\nconst users = [\n  {\n    name: \"Dude\",\n    score: 420\n  },\n  {\n    name: \"Bro\",\n    score: 69\n  },\n  {\n    name: \"Hackerman\",\n    score: 1337\n  }\n]\n\nconst App = () => {\n  const [submitted, setSubmitted] = useState(false)\n  const onSubmit = (answers, userName) => {\n    alert(userName + '\\'s answers are: ' + answers.join(' '));\n    setSubmitted(true);\n  }\n  return (\n    <div>\n      { submitted ? <LeaderBoard users={users} /> : <Test questions={questions} /> }\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}